{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","consolelog","err","searchForm","document","getElementById","searchInput","addEventListener","value","querySelector","showMessage","console","log","results","output","forEach","image","post","preview","images","source","url","title","truncateText","selftext","subreddit","score","innerHTML","e","preventDefault","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","limit","shortened","indexOf","substring"],"mappings":"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","file":"redditsearch.map","sourcesContent":["export default {\r\n    search: function(searchTerm, searchLimit, sortBy) {\r\n      return fetch(`http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`) \r\n       .then(res => res.json())\r\n       .then(data => data.data.children.map(data => data.data))\r\n       .catch(err => consolelog(err));\r\n    }\r\n}","import reddit from './redditapi';\r\n\r\nconst searchForm = document.getElementById('search-form');\r\nconst searchInput = document.getElementById('search-input');\r\n\r\n//Form event listener\r\nsearchForm.addEventListener('submit', e => {\r\n    //Get search term\r\n    const searchTerm = searchInput.value;\r\n    //Get sort\r\n    const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n    //Get limit\r\n    const searchLimit = document.getElementById('limit').value;\r\n\r\n    // Check input\r\n    if(searchTerm === '') {\r\n        //show messsage\r\n        showMessage('Please add a search term', 'alert-danger');\r\n\r\n    }\r\n    searchInput.value = '';\r\n \r\n\r\n    //Search Reddit\r\n    reddit.search(searchTerm, searchLimit, sortBy)\r\n    .then(results => {\r\n        console.log(results);\r\n        let output = '<div class=\"card-columns\">';\r\n         //Loop through posts\r\n        results.forEach(post => {\r\n            //Check for image\r\n            let image = post.preview ? post.preview.images[0].source.url : 'https://cdn.comparitech.com/wp-content/uploads/2017/08/reddit-1.jpg';\r\n\r\n            output += `\r\n            <div class=\"card mb-2\">\r\n  <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">${post.title}</h5>\r\n    <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\r\n    <a href=\"${post.url}\" target=\"_blank\" class=\"btn btn-primary\">Read more</a>\r\n    <hr>\r\n    <span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span>\r\n    <span class=\"badge badge-dark\">Score: ${post.score}</span>\r\n    </div>\r\n</div>\r\n            \r\n            `;\r\n           \r\n\r\n        });\r\n        output += '</div>'\r\n        document.getElementById('results').innerHTML = output;\r\n    });\r\n    e.preventDefault()\r\n});\r\n\r\n//Show message\r\nfunction showMessage(message, className) {\r\n    //Create div\r\n    const div = document.createElement('div');\r\n    //Add class to div\r\n    div.className = `alert ${className}`;\r\n    //Add text\r\n    div.appendChild(document.createTextNode(message));\r\n    //Get parent \r\n    const searchContainer = document.getElementById('search-container');\r\n    const search = document.getElementById('search');\r\n\r\n    //Insert message\r\n    searchContainer.insertBefore(div, search);\r\n    //Timeout alert\r\n    setTimeout(() => document.querySelector('.alert').remove(), 3000);\r\n};\r\n\r\nfunction truncateText(text, limit) {\r\n    const shortened = text.indexOf(' ', limit);\r\n    if(shortened == -1) return text;\r\n    return text.substring(0, shortened);\r\n}"]}